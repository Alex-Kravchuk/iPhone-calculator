{"version":3,"sources":["CurrenExpression.js","Dial.js","calculationFunction.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentExpression","props","classDefinition","bind","previusClass","currentClass","expression","result","equals","this","length","values","expressionStr","classForResult","toString","className","React","Component","Dial","activeKey","notActiveKey","changeState","standartClassName","e","preventDefault","value","target","innerHTML","tagName","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","colSpan","id","arithmetiSigns","calculation","checkSigns","filter","item","indexOf","valuesArr","split","readyValues","indexLastElement","reduce","acc","index","Number","push","calculationOfInterest","calculationSquareRoot","isNaN","pop","removeDivision","removeMultiplication","removeSubtraction","removeAdd","arr","map","splice","Math","sqrt","App","state","resultValue","handleChangeState","newValue","lastSymbol","undefined","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,aAAe,GACpB,EAAKC,aAAe,GACpB,EAAKC,WAAa,GAClB,EAAKC,OAAS,GACd,EAAKC,OAAS,GAPG,E,mDAUnB,WACE,OAAIC,KAAKH,WAAWI,OAAS,IAC3BD,KAAKL,aACHK,KAAKH,WAAWI,OAAS,GACrB,4BACA,0BAEND,KAAKJ,aACHI,KAAKH,WAAWI,OAAS,GACrB,4BACA,uBAKJD,KAAKH,WAAWI,OAAS,IAC3BD,KAAKL,aACHK,KAAKH,WAAWI,OAAS,GACrB,uBACA,0BAEND,KAAKJ,aACHI,KAAKH,WAAWI,OAAS,GACrB,uBACA,wBAKRD,KAAKL,aAAe,0BACpBK,KAAKJ,aAAe,yB,oBAGtB,WAAU,IAAD,EACPI,KAAKH,WAAaG,KAAKR,MAAMU,OAAOC,cACpCH,KAAKD,OAASC,KAAKR,MAAMU,OAAOH,OAChCC,KAAKF,OAAL,UAAcE,KAAKR,MAAMM,cAAzB,QAAmC,GAEnC,IAAIM,EACFJ,KAAKF,OAAOO,WAAWJ,OAAS,GAC5B,uBACA,qBAEN,OADAD,KAAKP,kBAEH,sBAAKa,UAAU,cAAf,UACE,qBAAKA,UAAWN,KAAKD,OAASC,KAAKL,aAAeK,KAAKJ,aAAvD,SACGI,KAAKH,aAER,qBAAKS,UAAWN,KAAKD,OAASK,EAAiB,oBAA/C,SACE,+BAAOJ,KAAKF,kB,GA5DyBS,IAAMC,WCAhCC,E,kDACnB,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,UAAY,EAAKA,UAAUhB,KAAf,gBACjB,EAAKiB,aAAe,EAAKA,aAAajB,KAAlB,gBACpB,EAAKkB,YAAc,EAAKpB,MAAMoB,YAAYlB,KAAvB,gBACnB,EAAKmB,kBAAoB,GALR,E,6CAQnB,SAAUC,GACXA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,UACK,OAArBJ,EAAEG,OAAOE,UACbnB,KAAKa,kBAAoBC,EAAEG,OAAOX,UAClCQ,EAAEG,OAAOX,UAAY,YACrBN,KAAKY,YAAYI,M,0BAGnB,SAAaF,GACXA,EAAEC,iBACuB,OAArBD,EAAEG,OAAOE,UACbL,EAAEG,OAAOX,UAAYN,KAAKa,qB,oBAG5B,WACE,OACE,qBAAKP,UAAU,YAAf,SACE,uBACEA,UAAU,aACVc,YAAapB,KAAKU,UAClBW,UAAWrB,KAAKW,aAChBW,aAActB,KAAKU,UACnBa,WAAYvB,KAAKW,aALnB,SAOE,kCACE,+BACE,oBAAIL,UAAU,gBAAd,eACA,oBAAIA,UAAU,gBAAd,oBACA,oBAAIA,UAAU,gBAAd,eACA,oBAAIA,UAAU,eAAd,qBAEF,+BACE,mCACA,mCACA,mCACA,oBAAIA,UAAU,eAAd,qBAEF,+BACE,mCACA,mCACA,mCACA,oBAAIA,UAAU,eAAd,uBAEF,+BACE,mCACA,mCACA,mCACA,oBAAIA,UAAU,eAAd,kBAEF,+BACE,oBAAIkB,QAAQ,IAAIC,GAAG,OAAnB,eAGA,mCACA,oBAAInB,UAAU,eAAd,6B,GAhEoBC,IAAMC,WCFlCkB,EAAiB,CAAC,OAAK,OAAK,SAAK,IAAK,SAAK,KAElC,SAASC,EAAY9B,GAClC,IAAI+B,EAAaF,EAAeG,QAAO,SAACC,GACtC,GAAIjC,EAAWkC,QAAQD,IAAS,EAAG,OAAOA,KAGxCE,EAAYnC,EAAWoC,MAAM,IAC7BC,EAAc,GACdC,EAAmBH,EAAU/B,OAAS,EAsC1C,OArCA+B,EAAUI,QAAO,SAACC,EAAKP,EAAMQ,GAmB3B,OAjBEC,OAAOT,IAAS,GACP,MAATA,IACW,WAATA,GAAyB,MAATA,IAA2B,IAAVQ,GAGtB,WAATR,IAAcA,EAAO,KACzBO,GAAOP,EACHK,IAAqBG,GACvBJ,EAAYM,KAAKD,OAAOF,MAGd,KAARA,GACFH,EAAYM,KAAKD,OAAOF,IAE1BH,EAAYM,KAAKV,GACjBO,EAAM,IAEDA,IACN,IAEHI,EAAsBP,GACtBQ,EAAsBR,GAEJS,MAAMT,EAAYA,EAAYjC,OAAS,MAEvDiC,EAAYU,MACRD,MAAMT,EAAYA,EAAYjC,OAAS,KAAKiC,EAAYU,OAG9DC,EAAeX,GACfY,EAAqBZ,GACrBa,EAAkBb,GAClBc,EAAUd,GAGNS,MAAMT,EAAYA,EAAYjC,OAAS,MAAQ2B,EAAW,GACrD,GAEAM,EAIX,SAASW,EAAeI,GACtB,IAAInD,EACJmD,EAAIC,KAAI,SAACpB,EAAMQ,GACb,MAAa,SAATR,GAEqB,WAAnBmB,EAAIX,EAAQ,IACdxC,EAASmD,EAAIX,EAAQ,IAAMW,EAAIX,EAAQ,GACvCW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,KAEzBA,EAASmD,EAAIX,EAAQ,GAAKW,EAAIX,EAAQ,GACtCW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,IAE3B+C,EAAeI,GACRnD,GAEFgC,KAIX,SAASgB,EAAqBG,GAC5B,IAAInD,EACJmD,EAAIC,KAAI,SAACpB,EAAMQ,GACb,MAAa,SAATR,GAEqB,WAAnBmB,EAAIX,EAAQ,IACdxC,EAASmD,EAAIX,EAAQ,IAAMW,EAAIX,EAAQ,GACvCW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,KAEzBA,EAASmD,EAAIX,EAAQ,GAAKW,EAAIX,EAAQ,GACtCW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,IAE3BgD,EAAqBG,GACdnD,GAEFgC,KAIX,SAASiB,EAAkBE,GACzB,IAAInD,EACJmD,EAAIC,KAAI,SAACpB,EAAMQ,GACb,MAAa,WAATR,GACFhC,EAASmD,EAAIX,EAAQ,GAAKW,EAAIX,EAAQ,GACtCW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,GACzBiD,EAAkBE,GACXnD,GAEFgC,KAIX,SAASkB,EAAUC,GACjB,IAAInD,EACJmD,EAAIC,KAAI,SAACpB,EAAMQ,GACb,MAAa,MAATR,GACFhC,EAASmD,EAAIX,EAAQ,GAAKW,EAAIX,EAAQ,GACtCW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,GACzBkD,EAAUC,GACHnD,GAEFgC,KAIX,SAASW,EAAsBQ,GAC7B,IAAInD,EACJmD,EAAIC,KAAI,SAACpB,EAAMQ,GACb,MAAa,MAATR,GAEEa,MAAMM,EAAIX,EAAQ,KACpBxC,EAASmD,EAAIX,EAAQ,IAAkC,IAA5Bc,KAAKC,KAAKJ,EAAIX,EAAQ,KACjDW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,KAEzBA,EAASmD,EAAIX,EAAQ,IAAuB,IAAjBW,EAAIX,EAAQ,IACvCW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,IAE3B2C,EAAsBQ,GACfnD,GAEFgC,KAIX,SAASY,EAAsBO,GAC7B,IAAInD,EACJmD,EAAIC,KAAI,SAACpB,EAAMQ,GACb,MAAa,WAATR,GAEEa,MAAMM,EAAIX,EAAQ,KACpBxC,EAASsD,KAAKC,KAAKJ,EAAIX,EAAQ,IAC/BW,EAAIE,OAAOb,EAAO,EAAGxC,KAGrBA,EAASmD,EAAIX,EAAQ,GAAKc,KAAKC,KAAKJ,EAAIX,EAAQ,IAChDW,EAAIE,OAAOb,EAAQ,EAAG,EAAGxC,IAE3B4C,EAAsBO,GACfnD,GAEFgC,K,IC7CIwB,E,kDArGb,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IACD+D,MAAQ,CACXpD,cAAe,GACfJ,QAAQ,EACRD,OAAQ,IAEV,EAAK0D,YAAc,GACnB,EAAKC,kBAAoB,EAAKA,kBAAkB/D,KAAvB,gBACzB,EAAKiC,YAAcA,EAAYjC,KAAZ,gBATF,E,qDAYnB,SAAkBgE,GAAW,IAAD,EACtBC,EAAU,UACZ3D,KAAKuD,MAAMpD,cAAcH,KAAKuD,MAAMpD,cAAcF,OAAS,UAD/C,QACqD,GAElD,MAAbyD,QAQaE,IAAfD,GACc,SAAbD,GACc,SAAbA,GACa,MAAbA,GACa,MAAbA,KAIe,WAAfC,GAAsBhB,MAAMe,IACb,MAAfC,GAAsBhB,MAAMe,IAGf,SAAfC,GACAhB,MAAMe,IACO,WAAbA,GACa,WAAbA,GAIe,SAAfC,GACAhB,MAAMe,IACO,WAAbA,GACa,WAAbA,GAGiB,MAAfC,GAAsBhB,MAAMe,IAA0B,WAAbA,GAC1B,WAAfC,GAAsBhB,MAAMe,IAA0B,WAAbA,GAE5B,MAAbA,QAAyCE,IAArB5D,KAAKwD,cAEZ,MAAbE,GAOA1D,KAAKuD,MAAMxD,QAAW4C,MAAMe,GAS5B1D,KAAKuD,MAAMxD,QAAU4C,MAAMe,GAC7B1D,KAAK6D,SAAS,CACZ1D,cAAeH,KAAKwD,YAAcE,EAClC3D,QAAQ,IAKZC,KAAK6D,SAAS,CACZ9D,QAAQ,EACRI,cAAeH,KAAKuD,MAAMpD,cAAgBuD,IAlB1C1D,KAAK6D,SAAS,CACZ1D,cAAeuD,EACf3D,QAAQ,IATVC,KAAK6D,SAAS,CACZ9D,QAAQ,MAvCVC,KAAK6D,SAAS,CACZ1D,cAAe,O,oBAkErB,WACE,IAAIN,EAAaG,KAAKuD,MAAMpD,cACxBL,EAASE,KAAK2B,YAAY9B,GAE9B,OADAG,KAAKwD,YAAc1D,EAAO,GAExB,sBAAKQ,UAAU,MAAf,UACE,cAAC,EAAD,CACEJ,OAAQF,KAAKuD,MACbzD,OAAQA,EACRc,YAAaZ,KAAKyD,oBAEpB,cAAC,EAAD,CAAM7C,YAAaZ,KAAKyD,2B,GAhGdlD,IAAMC,WCMTsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.176698c5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class CurrentExpression extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.classDefinition = this.classDefinition.bind(this);\r\n    this.previusClass = \"\";\r\n    this.currentClass = \"\";\r\n    this.expression = \"\";\r\n    this.result = \"\";\r\n    this.equals = \"\";\r\n  }\r\n\r\n  classDefinition() {\r\n    if (this.expression.length > 16) {\r\n      this.previusClass =\r\n        this.expression.length > 16\r\n          ? \"very-very-long-expression\"\r\n          : \"previus-expression\";\r\n\r\n      this.currentClass =\r\n        this.expression.length > 16\r\n          ? \"very-very-long-expression\"\r\n          : \"current-expression\";\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.expression.length > 10) {\r\n      this.previusClass =\r\n        this.expression.length > 10\r\n          ? \"very-long-expression\"\r\n          : \"previus-expression\";\r\n\r\n      this.currentClass =\r\n        this.expression.length > 10\r\n          ? \"very-long-expression\"\r\n          : \"current-expression\";\r\n\r\n      return;\r\n    }\r\n\r\n    this.previusClass = \"previus-expression\";\r\n    this.currentClass = \"current-expression\";\r\n  }\r\n\r\n  render() {\r\n    this.expression = this.props.values.expressionStr;\r\n    this.equals = this.props.values.equals;\r\n    this.result = this.props.result ?? \"\";\r\n\r\n    let classForResult =\r\n      this.result.toString().length > 16\r\n        ? \"very-long-expression\"\r\n        : \"current-expression\";\r\n    this.classDefinition();\r\n    return (\r\n      <div className=\"App__result\">\r\n        <div className={this.equals ? this.previusClass : this.currentClass}>\r\n          {this.expression}\r\n        </div>\r\n        <div className={this.equals ? classForResult : \"result-in-procces\"}>\r\n          <span>{this.result}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Dial extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeKey = this.activeKey.bind(this);\r\n    this.notActiveKey = this.notActiveKey.bind(this);\r\n    this.changeState = this.props.changeState.bind(this);\r\n    this.standartClassName = \"\";\r\n  }\r\n\r\n  activeKey(e) {\r\n\te.preventDefault();\r\n\tconst value = e.target.innerHTML;\r\n    if (e.target.tagName !== \"TD\") return;\r\n    this.standartClassName = e.target.className;\r\n    e.target.className = \"activeKey\";\r\n    this.changeState(value);\r\n  }\r\n\r\n  notActiveKey(e) {\r\n    e.preventDefault();\r\n    if (e.target.tagName !== \"TD\") return;\r\n    e.target.className = this.standartClassName;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App__dial\">\r\n        <table\r\n          className=\"App__table\"\r\n          onMouseDown={this.activeKey}\r\n          onMouseUp={this.notActiveKey}\r\n          onTouchStart={this.activeKey}\r\n          onTouchEnd={this.notActiveKey}\r\n        >\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"special-signs\">C</td>\r\n              <td className=\"special-signs\">&#8730;</td>\r\n              <td className=\"special-signs\">&#37;</td>\r\n              <td className=\"simple-signs\">&#247;</td>\r\n            </tr>\r\n            <tr>\r\n              <td>7</td>\r\n              <td>8</td>\r\n              <td>9</td>\r\n              <td className=\"simple-signs\">&#215;</td>\r\n            </tr>\r\n            <tr>\r\n              <td>4</td>\r\n              <td>5</td>\r\n              <td>6</td>\r\n              <td className=\"simple-signs\">&#8722;</td>\r\n            </tr>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>2</td>\r\n              <td>3</td>\r\n              <td className=\"simple-signs\">&#43;</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan=\"2\" id=\"zero\">\r\n                0\r\n              </td>\r\n              <td>.</td>\r\n              <td className=\"simple-signs\">&#61;</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const arithmetiSigns = [\"÷\", \"×\", \"−\", \"+\", \"√\", \"%\"];\r\n\r\nexport default function calculation(expression) {\r\n  let checkSigns = arithmetiSigns.filter((item) => {\r\n    if (expression.indexOf(item) >= 0) return item;\r\n  });\r\n\r\n  let valuesArr = expression.split(\"\");\r\n  let readyValues = [];\r\n  let indexLastElement = valuesArr.length - 1;\r\n  valuesArr.reduce((acc, item, index) => {\r\n    if (\r\n      Number(item) >= 0 ||\r\n      item === \".\" ||\r\n      ((item === \"−\" || item === \"-\") && index === 0)\r\n    ) {\r\n      // это условие нужно, потому что Number выдает NaN с \"красивым\" символом\r\n      if (item === \"−\") item = \"-\";\r\n      acc += item;\r\n      if (indexLastElement === index) {\r\n        readyValues.push(Number(acc));\r\n      }\r\n    } else {\r\n      if (acc !== \"\") {\r\n        readyValues.push(Number(acc));\r\n      }\r\n      readyValues.push(item);\r\n      acc = \"\";\r\n    }\r\n    return acc;\r\n  }, \"\");\r\n\r\n  calculationOfInterest(readyValues);\r\n  calculationSquareRoot(readyValues);\r\n  // discard the arithmetic sign until the expression is complete\r\n  let lastElement = isNaN(readyValues[readyValues.length - 1]);\r\n  if (lastElement) {\r\n    readyValues.pop();\r\n    if (isNaN(readyValues[readyValues.length - 1])) readyValues.pop();\r\n  }\r\n\r\n  removeDivision(readyValues);\r\n  removeMultiplication(readyValues);\r\n  removeSubtraction(readyValues);\r\n  removeAdd(readyValues);\r\n\r\n  // if the result is not calculated to return the blank\r\n  if (isNaN(readyValues[readyValues.length - 1]) || !checkSigns[0]) {\r\n    return \"\";\r\n  } else {\r\n    return readyValues;\r\n  }\r\n}\r\n\r\nfunction removeDivision(arr) {\r\n  let result;\r\n  arr.map((item, index) => {\r\n    if (item === \"÷\") {\r\n      // if the operation is a negative number\r\n      if (arr[index + 1] === \"−\") {\r\n        result = arr[index - 1] / -arr[index + 2];\r\n        arr.splice(index - 1, 4, result);\r\n      } else {\r\n        result = arr[index - 1] / arr[index + 1];\r\n        arr.splice(index - 1, 3, result);\r\n      }\r\n      removeDivision(arr);\r\n      return result;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction removeMultiplication(arr) {\r\n  let result;\r\n  arr.map((item, index) => {\r\n    if (item === \"×\") {\r\n      // if the operation is a negative number\r\n      if (arr[index + 1] === \"−\") {\r\n        result = arr[index - 1] * -arr[index + 2];\r\n        arr.splice(index - 1, 4, result);\r\n      } else {\r\n        result = arr[index - 1] * arr[index + 1];\r\n        arr.splice(index - 1, 3, result);\r\n      }\r\n      removeMultiplication(arr);\r\n      return result;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction removeSubtraction(arr) {\r\n  let result;\r\n  arr.map((item, index) => {\r\n    if (item === \"−\") {\r\n      result = arr[index - 1] - arr[index + 1];\r\n      arr.splice(index - 1, 3, result);\r\n      removeSubtraction(arr);\r\n      return result;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction removeAdd(arr) {\r\n  let result;\r\n  arr.map((item, index) => {\r\n    if (item === \"+\") {\r\n      result = arr[index - 1] + arr[index + 1];\r\n      arr.splice(index - 1, 3, result);\r\n      removeAdd(arr);\r\n      return result;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction calculationOfInterest(arr) {\r\n  let result;\r\n  arr.map((item, index) => {\r\n    if (item === \"%\") {\r\n      // if you want to calculate the percentage of the square root\r\n      if (isNaN(arr[index + 1])) {\r\n        result = arr[index - 1] * (Math.sqrt(arr[index + 2]) * 0.01);\r\n        arr.splice(index - 1, 4, result);\r\n      } else {\r\n        result = arr[index - 1] * (arr[index + 1] * 0.01);\r\n        arr.splice(index - 1, 3, result);\r\n      }\r\n      calculationOfInterest(arr);\r\n      return result;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\nfunction calculationSquareRoot(arr) {\r\n  let result;\r\n  arr.map((item, index) => {\r\n    if (item === \"√\") {\r\n      // if the expression type \"number (arithmetic sign) √ number\"\r\n      if (isNaN(arr[index - 1])) {\r\n        result = Math.sqrt(arr[index + 1]);\r\n        arr.splice(index, 2, result);\r\n        // if the expression type \"number √ number\"\r\n      } else {\r\n        result = arr[index - 1] * Math.sqrt(arr[index + 1]);\r\n        arr.splice(index - 1, 3, result);\r\n      }\r\n      calculationSquareRoot(arr);\r\n      return result;\r\n    }\r\n    return item;\r\n  });\r\n}\r\n\r\n// if is NaN, throw Error","import React from \"react\";\nimport \"./App.scss\";\nimport CurrentExpression from \"./CurrenExpression\";\nimport Dial from \"./Dial\";\nimport calculation from \"./calculationFunction\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expressionStr: \"\",\n      equals: false,\n      result: \"\",\n    };\n    this.resultValue = \"\";\n    this.handleChangeState = this.handleChangeState.bind(this);\n    this.calculation = calculation.bind(this);\n  }\n\n  handleChangeState(newValue) {\n    let lastSymbol =\n      this.state.expressionStr[this.state.expressionStr.length - 1] ?? '';\n\n    if (newValue === \"C\") {\n      this.setState({\n        expressionStr: \"\",\n      });\n      return;\n    }\n    // the expression can only begin with characters: √, −\n    if (\n      lastSymbol === undefined &&\n      (newValue === \"÷\" ||\n        newValue === \"×\" ||\n        newValue === \"+\" ||\n        newValue === \"%\")\n    )\n      return;\n\n    if (lastSymbol === \"√\" && isNaN(newValue)) return;\n    if (lastSymbol === \"%\" && isNaN(newValue)) return;\n\n    if (\n      lastSymbol === \"÷\" &&\n      isNaN(newValue) &&\n      newValue !== \"√\" &&\n      newValue !== \"−\"\n    )\n      return;\n    if (\n      lastSymbol === \"×\" &&\n      isNaN(newValue) &&\n      newValue !== \"√\" &&\n      newValue !== \"−\"\n    )\n      return;\n    if (lastSymbol === \"+\" && isNaN(newValue) && newValue !== \"√\") return;\n    if (lastSymbol === \"−\" && isNaN(newValue) && newValue !== \"√\") return;\n\n    if (newValue === \"=\" && this.resultValue === undefined) return;\n\n    if (newValue === \"=\") {\n      this.setState({\n        equals: true,\n      });\n      return;\n    }\n    // if after determining the result entered a new expression without a sign\n    if (this.state.equals && !isNaN(newValue)) {\n      this.setState({\n        expressionStr: newValue,\n        equals: false,\n      });\n      return;\n    }\n\n    // if after determining the result entered a new expression using the sign\n    if (this.state.equals && isNaN(newValue)) {\n      this.setState({\n        expressionStr: this.resultValue + newValue,\n        equals: false,\n      });\n      return;\n    }\n\n    this.setState({\n      equals: false,\n      expressionStr: this.state.expressionStr + newValue,\n    });\n  }\n\n  render() {\n    let expression = this.state.expressionStr;\n    let result = this.calculation(expression);\n    this.resultValue = result[0];\n    return (\n      <div className=\"App\">\n        <CurrentExpression\n          values={this.state}\n          result={result}\n          changeState={this.handleChangeState}\n        />\n        <Dial changeState={this.handleChangeState} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}